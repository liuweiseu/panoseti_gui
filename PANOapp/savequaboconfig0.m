function savequaboconfig(filename, quaboconfig,startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   QUABOCONFIG = IMPORTFILE(FILENAME) Reads data from text file FILENAME
%   for the default selection.
%
%   QUABOCONFIG = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from
%   rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   quaboconfig = importfile('quabo_config.txt', 1, 319);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/10/30 20:15:35

%% Initialize variables.
delimiter = {'\t',',','=','*'};
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format for each line of text:
%   column1: text (%s)
%	column2: text (%s)
%   column3: text (%s)
%	column4: text (%s)
%   column5: text (%s)
%	column6: text (%s)
%   column7: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'w');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
% textscan(fileID, '%[^\n\r]', startRow(1)-1, 'WhiteSpace', '', 'ReturnOnError', false);
% dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
% for block=2:length(startRow)
%     frewind(fileID);
%     textscan(fileID, '%[^\n\r]', startRow(block)-1, 'WhiteSpace', '', 'ReturnOnError', false);
%     dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
%     for col=1:length(dataArray)
%         dataArray{col} = [dataArray{col};dataArrayBlock{col}];
%     end
% end
%%%%%reformat a la Rick
   
for ii=1:4%size(quaboconfig,1)
    nbytes = fprintf(fileID,'%s\n',...
        ['*' char(quaboconfig(ii,1)) ...
      char(quaboconfig(ii,2)) ...
      char(quaboconfig(ii,3)) ...
      char(quaboconfig(ii,4)) ...
      char(quaboconfig(ii,5)) ...
      char(quaboconfig(ii,6)) ...
      char(quaboconfig(ii,7)) ...
      ]);  
    
end 
for ii=5:303
    if ii==5
        comm=' *';
    else
        comm='';
    end
    nbytes = fprintf(fileID,'%s\n',...
        [char(quaboconfig(ii,1)) '=' ...
      char(quaboconfig(ii,2)) ',' ...
      char(quaboconfig(ii,3)) ',' ...
      char(quaboconfig(ii,4)) ',' ...
      char(quaboconfig(ii,5)) comm...
      char(quaboconfig(ii,6)) ...
      char(quaboconfig(ii,7)) ...
      ]);  
end
for ii=304:305%size(quaboconfig,1)
    nbytes = fprintf(fileID,'%s\n',...
        ['*' char(quaboconfig(ii,1)) ...
      char(quaboconfig(ii,2)) ...
      char(quaboconfig(ii,3)) ...
      char(quaboconfig(ii,4)) ...
      char(quaboconfig(ii,5)) ...
      char(quaboconfig(ii,6)) ...
      char(quaboconfig(ii,7)) ...
      ]);  
    
end 
for ii=306:309%size(quaboconfig,1) %HV
    if ii==306
        comm=' *';
    else
        comm='';
    end
    nbytes = fprintf(fileID,'%s\n',...
        [char(quaboconfig(ii,1)) '=' ...
      char(quaboconfig(ii,2)) comm...
      char(quaboconfig(ii,3)) ...
      char(quaboconfig(ii,4)) ...
      char(quaboconfig(ii,5)) ...
      char(quaboconfig(ii,6)) ...
      char(quaboconfig(ii,7)) ...
      ]);  
    
end 
for ii=310:310%size(quaboconfig,1)
    nbytes = fprintf(fileID,'%s\n',...
        ['*' char(quaboconfig(ii,1)) ...
      char(quaboconfig(ii,2)) ...
      char(quaboconfig(ii,3)) ...
      char(quaboconfig(ii,4)) ...
      char(quaboconfig(ii,5)) ...
      char(quaboconfig(ii,6)) ...
      char(quaboconfig(ii,7)) ...
      ]);  
    
end 
for ii=311:318%size(quaboconfig,1)
    nbytes = fprintf(fileID,'%s\n',...
        [char(quaboconfig(ii,1)) '='...
      char(quaboconfig(ii,2)) ' *'...
      char(quaboconfig(ii,3)) ...
      char(quaboconfig(ii,4)) ...
      char(quaboconfig(ii,5)) ...
      char(quaboconfig(ii,6)) ...
      char(quaboconfig(ii,7)) ...
      ]);  
    
end 
%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.



